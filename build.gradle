plugins {
    id 'java'
    id "xyz.jpenilla.run-paper" version "2.3.0"
    id "io.papermc.paperweight.userdev" version "1.7.1"
}

group = 'dev.imb11'
version = '0.1.1-SNAPSHOT'

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven {
        name = "FabricMC"
        url = "https://maven.fabricmc.net/"
    }
}

paperweight.reobfArtifactConfiguration = io.papermc.paperweight.userdev.ReobfArtifactConfiguration.getMOJANG_PRODUCTION()

dependencies {
    paperweight.paperDevBundle("${stonecutter.current.version}-R0.1-SNAPSHOT")
    pluginRemapper("net.fabricmc:tiny-remapper:0.10.4:fat")
}

tasks.assemble {
    dependsOn(tasks.reobfJar)
}

def targetJavaVersion = 21
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

//jar {
//    manifest {
//        attributes["paperweight-mappings-namespace"] = "mojang"
//    }
//}

tasks {
    runServer {
        minecraftVersion(stonecutter.current.version)
    }
}

processResources {
    def props = [
            version: version,
            mc: stonecutter.current.version
                    .replace("1.20.1", "1.20")
                    .replace("1.20.4", "1.20")
    ]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
